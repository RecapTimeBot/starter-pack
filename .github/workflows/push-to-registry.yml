name: "Docker Builds CI"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
     #matrix:
       # archs supported by the official CDRS image
     #  arch: ["amd64", "arm64"]
     runs-on: "ubuntu-latest"
     steps:
       - name: "Create checkmates"
         uses: "actions/checkout@v2"
       - name: Run tests
         run: docker build . --file Dockerfile
  publish:
     needs: [ test ]
     runs-on: "ubuntu-latest"
     if: ${{ github.ref == 'refs/heads/main' }}
     steps:
       - name: "Create checkmates"
         uses: "actions/checkout@v2"
       - name: Build image
         run: echo "Image name: $IMAGE_NAME" && docker build . --file Dockerfile --tag $IMAGE_NAME
       - name: Log into registry
         # change the username into yours if not using our bot
         run: echo "${{ secrets.GH_SERVICE_ACCOUNT_API_KEY }}" | docker login ghcr.io -u RecapTimeBot --password-stdin

       - name: Push image
         run: |
           # change the path after ghcr.io, preferrly owner/repo
           # note: you must enable enhanced container support first
           # in your account/org in order to push to ghcr.io
           IMAGE_ID=ghcr.io/code-server-boilerplates/starter-pack

           # Change all uppercase to lowercase
           IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

           # Strip git ref prefix from version
           VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

           # Strip "v" prefix from tag name
           [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

           # Use Docker `latest` tag convention
           [ "$VERSION" == "main" ] && VERSION=latest

           echo IMAGE_ID=$IMAGE_ID
           echo VERSION=$VERSION

           docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
           docker push $IMAGE_ID:$VERSION
