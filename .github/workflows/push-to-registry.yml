name: "Docker Builds CI"

on:
  push:
    branches: [ main ]

jobs:
  test-main:
     #matrix:
       # archs supported by the official CDRS image
     #  arch: ["amd64", "arm64"]
     runs-on: "ubuntu-latest"
     steps:
       - name: "Create checkmates"
         uses: "actions/checkout@v2"
       - name: Run tests
         run: docker build . --file Dockerfile
  publish-main:
     needs: [ test-main ]
     runs-on: "ubuntu-latest"
     if: ${{ github.ref == 'refs/heads/main' }}
     steps:
       - name: "Create checkmates"
         uses: "actions/checkout@v2"

       # Setup QEMU for multiarch builds
       - name: Set up QEMU
         uses: docker/setup-qemu-action@v1
       # and of course, we need to setup Buildx
       - name: Set up Docker Buildx
         uses: docker/setup-buildx-action@v1
         with:
           driver-opts: "image=moby/buildkit:master,network=host"

       # repeat this for other registries you want to use
       # especially the official Docker Hub Registry
       - name: Login to GitHub Container Registry
         uses: docker/login-action@v1
         with:
           registry: ghcr.io
           # change the username into yours if not using our bot
           username: RecapTimeBot
           # may not work on personal accounts if using our PAT
           # we may try soon
           password: ${{ secrets.GH_SERVICE_ACCOUNT_API_KEY }}

       # after building, we may retag them for DockerHub instead
       # of building again
       - name: Build and push to GHCR + DockerHub (amd64)
         id: build-amd64
         uses: docker/build-push-action@v2
         with:
           push: true
           # version mapping:
           # - latest -> cdr-latest -> cdr-latest.debian10
           # - cdr-3.9.3 -> cdr.3.9.3.debian10
           tags: |
             ghcr.io/code-server-boilerplates/starter-pack:cdr-latest
             ghcr.io/code-server-boilerplates/starter-pack:cdr-latest.debian10
             ghcr.io/code-server-boilerplates/starter-pack:latest
             ghcr.io/code-server-boilerplates/starter-pack:cdr-3.9.3
             ghcr.io/code-server-boilerplates/starter-pack:cdr-3.9.3.debian10
           context: .
           platforms: linux/amd64
       - name: Echo imahe digest (amd64)
         run: echo AMD64 image - ${{ steps.build_amd64.outputs.digest }}
       # with an exception for arm64 builds
       - name: Build and push to GHCR + DockerHub (arm64)
         id: buuld-arm64
         uses: docker/build-push-action@v2
         with:
           push: true
           # see line 53 for notes regarding how we map versions into image tags
           tags: |
             ghcr.io/code-server-boilerplates/starter-pack:cdr-latest
             ghcr.io/code-server-boilerplates/starter-pack:cdr-latest.debian10
             ghcr.io/code-server-boilerplates/starter-pack:latest
             ghcr.io/code-server-boilerplates/starter-pack:cdr-3.9.3
             ghcr.io/code-server-boilerplates/starter-pack:cdr-3.9.3.debian10
           context: .
           platforms: linux/arm64
           file: arm64.Dockerfile
       - name: Echo image digest (arm64)
         run: echo ARM64 image - ${{ steps.build_arm64.outputs.digest }}
